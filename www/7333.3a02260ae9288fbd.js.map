{"version":3,"file":"7333.3a02260ae9288fbd.js","mappings":"uJACO,MAAMA,UAAuBC,KAChCC,cACIC,SAASC,WACTC,KAAKC,MAAQ,kBAChB,CACKC,WAAYD,UAAS,qCACF,iBAAVA,IACPE,EAAKF,MAAQA,EAFM,IAI1B,CACKG,IAAIC,GAAS,qCAEf,MAAO,CAAEC,MADKC,EAAKC,KAAKC,QAAQF,EAAKG,YAAYL,EAAQM,MAD1C,IAGlB,CACKC,IAAIP,GAAS,qCACfQ,EAAKL,KAAKM,QAAQD,EAAKH,YAAYL,EAAQM,KAAMN,EAAQC,MAD1C,IAElB,CACKS,OAAOV,GAAS,qCAClBW,EAAKR,KAAKS,WAAWD,EAAKN,YAAYL,EAAQM,KAD5B,IAErB,CACKO,OAAO,qCAET,MAAO,CAAEA,KADIC,EAAKC,UAAUC,IAAIC,GAAKA,EAAEC,UAAUJ,EAAKK,OAAOC,SADpD,IAGZ,CACKC,QAAQ,qCACV,UAAWf,KAAOgB,EAAKP,UACnBO,EAAKnB,KAAKS,WAAWN,EAFf,IAIb,CACKiB,UAAU,qCACZ,IAAIC,EACJ,MAAMC,EAAW,GACXC,EAAW,GACXC,EAAY,QACZd,EAAOe,OAAOf,KAAKgB,EAAK1B,MAAM2B,OAAOb,GAA8B,IAAzBA,EAAEc,QAAQJ,IAC1D,UAAWK,KAAUnB,EAAM,CACvB,MAAMP,EAAM0B,EAAOd,UAAUS,EAAUP,QACjCnB,EAA6C,QAApCuB,EAAKK,EAAK1B,KAAKC,QAAQ4B,UAA4B,IAAPR,EAAgBA,EAAK,IACxEvB,MAAOgC,SAAuBJ,EAAK9B,IAAI,CAAEO,QACrB,iBAAjB2B,EACPP,EAASQ,KAAK5B,UAGRuB,EAAKtB,IAAI,CAAED,MAAKL,UACtBwB,EAASS,KAAK5B,GAErB,CACD,MAAO,CAAEmB,WAAUC,WAlBP,IAmBf,CACKS,YAAY,qCACd,MACMtB,EAAOe,OAAOf,KAAKuB,EAAKjC,MAAM2B,OAAOb,GAA8B,IAAzBA,EAAEc,QADhC,UAElB,UAAWC,KAAUnB,EACjBuB,EAAKjC,KAAKS,WAAWoB,EAJX,IAMjB,CACG7B,WACA,OAAOkC,OAAOC,YACjB,CACGnB,aACA,MAAsB,kBAAfxB,KAAKC,MAA4B,GAAM,GAAED,KAAKC,QACxD,CACDmB,UACI,OAAOa,OAAOf,KAAKlB,KAAKQ,MAAM2B,OAAOb,GAAgC,IAA3BA,EAAEc,QAAQpC,KAAKwB,QAC5D,CACDd,YAAYC,GACR,OAAOX,KAAKwB,OAASb,CACxB,EAnEyC","names":["PreferencesWeb","WebPlugin","constructor","super","arguments","this","group","configure","_this","get","options","value","_this2","impl","getItem","applyPrefix","key","set","_this3","setItem","remove","_this4","removeItem","keys","_this5","rawKeys","map","k","substring","prefix","length","clear","_this6","migrate","_a","migrated","existing","oldprefix","Object","_this7","filter","indexOf","oldkey","currentValue","push","removeOld","_this8","window","localStorage"],"sourceRoot":"webpack:///","sources":["./node_modules/@capacitor/preferences/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class PreferencesWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.group = 'CapacitorStorage';\n    }\n    async configure({ group }) {\n        if (typeof group === 'string') {\n            this.group = group;\n        }\n    }\n    async get(options) {\n        const value = this.impl.getItem(this.applyPrefix(options.key));\n        return { value };\n    }\n    async set(options) {\n        this.impl.setItem(this.applyPrefix(options.key), options.value);\n    }\n    async remove(options) {\n        this.impl.removeItem(this.applyPrefix(options.key));\n    }\n    async keys() {\n        const keys = this.rawKeys().map(k => k.substring(this.prefix.length));\n        return { keys };\n    }\n    async clear() {\n        for (const key of this.rawKeys()) {\n            this.impl.removeItem(key);\n        }\n    }\n    async migrate() {\n        var _a;\n        const migrated = [];\n        const existing = [];\n        const oldprefix = '_cap_';\n        const keys = Object.keys(this.impl).filter(k => k.indexOf(oldprefix) === 0);\n        for (const oldkey of keys) {\n            const key = oldkey.substring(oldprefix.length);\n            const value = (_a = this.impl.getItem(oldkey)) !== null && _a !== void 0 ? _a : '';\n            const { value: currentValue } = await this.get({ key });\n            if (typeof currentValue === 'string') {\n                existing.push(key);\n            }\n            else {\n                await this.set({ key, value });\n                migrated.push(key);\n            }\n        }\n        return { migrated, existing };\n    }\n    async removeOld() {\n        const oldprefix = '_cap_';\n        const keys = Object.keys(this.impl).filter(k => k.indexOf(oldprefix) === 0);\n        for (const oldkey of keys) {\n            this.impl.removeItem(oldkey);\n        }\n    }\n    get impl() {\n        return window.localStorage;\n    }\n    get prefix() {\n        return this.group === 'NativeStorage' ? '' : `${this.group}.`;\n    }\n    rawKeys() {\n        return Object.keys(this.impl).filter(k => k.indexOf(this.prefix) === 0);\n    }\n    applyPrefix(key) {\n        return this.prefix + key;\n    }\n}\n"],"x_google_ignoreList":[0]}