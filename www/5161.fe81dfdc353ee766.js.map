{"version":3,"file":"5161.fe81dfdc353ee766.js","mappings":"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","names":["DEFAULT_VAPID_KEY","FCM_MSG","MessageType$1","MessageType","arrayToBase64","array","uint8Array","Uint8Array","btoa","String","fromCharCode","replace","base64ToArray","base64String","base64","repeat","length","rawData","atob","outputArray","i","charCodeAt","DATA_MESSAGE","DISPLAY_NOTIFICATION","PUSH_RECEIVED","NOTIFICATION_CLICKED","OLD_DB_NAME","OLD_OBJECT_STORE_NAME","migrateOldDatabase","senderId","indexedDB","databases","map","db","name","includes","tokenDetails","openDB","upgrade","_ref","oldVersion","newVersion","upgradeTransaction","_a","objectStoreNames","contains","objectStore","value","index","get","clear","oldDetails","auth","p256dh","endpoint","token","fcmToken","createTime","Date","now","subscriptionOptions","swScope","vapidKey","close","deleteDB","checkTokenDetails","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeDb","createObjectStore","dbGet","firebaseDependencies","key","getKey","transaction","oldTokenDetails","appConfig","dbSet","tx","put","done","dbRemove","delete","appId","ERROR_MAP","ERROR_FACTORY","ErrorFactory","requestGetToken","headers","getHeaders","body","getBody","subscribeOptions","method","JSON","stringify","responseData","fetch","getEndpoint","json","err","create","errorInfo","toString","error","message","requestUpdateToken","updateOptions","requestDeleteToken","unsubscribeOptions","projectId","installations","authToken","getToken","Headers","Accept","apiKey","web","applicationPubKey","TOKEN_EXPIRATION_MS","getTokenInternal","messaging","pushSubscription","getPushSubscription","swRegistration","scope","isTokenValid","updateToken","e","console","warn","getNewToken","deleteTokenInternal","pushManager","getSubscription","unsubscribe","updatedToken","updatedTokenDetails","Object","assign","subscribe","userVisibleOnly","applicationServerKey","dbOptions","currentOptions","isVapidKeyEqual","isEndpointEqual","isAuthEqual","isP256dhEqual","externalizePayload","internalPayload","payload","from","collapseKey","collapse_key","messageId","fcmMessageId","propagateNotificationPayload","messagePayloadInternal","notification","title","image","icon","propagateDataPayload","data","propagateFcmOptions","_b","_c","_d","_e","fcmOptions","click_action","link","analyticsLabel","analytics_label","sleep","ms","Promise","resolve","setTimeout","stageLog","fcmEvent","createFcmEvent","getId","createAndEnqueueLogEvent","fid","project_number","message_id","instance_id","message_type","sdk_platform","package_name","self","origin","event","logEvent","event_time_ms","Math","floor","source_extension_json_proto3","logEvents","push","_mergeStrings","s1","s2","resultArray","charAt","join","newSubscription","getMessagePayloadInternal","deliveryMetricsExportedToBigQueryEnabled","clientList","getClientList","hasVisibleClients","sendMessagePayloadInternalToWindows","showNotification","wrapInternalPayload","onBackgroundMessageHandler","next","action","stopImmediatePropagation","getLink","url","URL","location","href","originUrl","host","client","getWindowClient","focus","clients","openWindow","messageType","isFirebaseMessaging","postMessage","wrappedInternalPayload","X","clientUrl","some","visibilityState","startsWith","matchAll","type","includeUncontrolled","notificationPayloadInternal","actions","maxActions","Notification","registration","isConsoleMessage","getMissingValueError","valueName","MessagingService","constructor","app","analyticsProvider","this","onMessageHandler","isLogServiceStarted","extractAppConfig","options","configKeys","keyName","appName","messagingSenderId","_delete","SwMessagingFactory","container","getProvider","getImmediate","addEventListener","waitUntil","onPush","onSubChange","onNotificationClick","onBackgroundMessage","nextOrObserver","onBackgroundMessage$1","undefined","document","getModularInstance","registerMessagingInSw","_registerComponent","Component","MessagingCompatImpl","_delegate","_this","deleteToken","_this2","onMessage","messagingCompatFactory","NAMESPACE_EXPORTS","isSupported","isSwSupported","isIndexedDBAvailable","ServiceWorkerRegistration","prototype","hasOwnProperty","PushSubscription","isWindowSupported","window","areCookiesEnabled","navigator","registerMessagingCompat","firebase","setServiceProps"],"sourceRoot":"webpack:///","sources":["./node_modules/@firebase/messaging/dist/index.sw.esm2017.js","./node_modules/@firebase/messaging-compat/dist/esm/index.esm2017.js"],"sourcesContent":["import '@firebase/installations';\nimport { Component } from '@firebase/component';\nimport { openDB, deleteDB } from 'idb';\nimport { ErrorFactory, isIndexedDBAvailable, validateIndexedDBOpenable, getModularInstance } from '@firebase/util';\nimport { _registerComponent, _getProvider, getApp } from '@firebase/app';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\r\nconst ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\r\n/** Key of FCM Payload in Notification's data field. */\r\nconst FCM_MSG = 'FCM_MSG';\r\nconst CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\r\n// Defined as in proto/messaging_event.proto. Neglecting fields that are supported.\r\nconst SDK_PLATFORM_WEB = 3;\r\nconst EVENT_MESSAGE_DELIVERED = 1;\r\nvar MessageType$1;\r\n(function (MessageType) {\r\n    MessageType[MessageType[\"DATA_MESSAGE\"] = 1] = \"DATA_MESSAGE\";\r\n    MessageType[MessageType[\"DISPLAY_NOTIFICATION\"] = 3] = \"DISPLAY_NOTIFICATION\";\r\n})(MessageType$1 || (MessageType$1 = {}));\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\r\n * in compliance with the License. You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n * or implied. See the License for the specific language governing permissions and limitations under\r\n * the License.\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\r\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\r\n})(MessageType || (MessageType = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction arrayToBase64(array) {\r\n    const uint8Array = new Uint8Array(array);\r\n    const base64String = btoa(String.fromCharCode(...uint8Array));\r\n    return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\r\nfunction base64ToArray(base64String) {\r\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n    const base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n    const rawData = atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n    for (let i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst OLD_DB_NAME = 'fcm_token_details_db';\r\n/**\r\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\r\n * callback is called for all versions of the old DB.\r\n */\r\nconst OLD_DB_VERSION = 5;\r\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\r\nasync function migrateOldDatabase(senderId) {\r\n    if ('databases' in indexedDB) {\r\n        // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\r\n        // typecast when it lands in TS types.\r\n        const databases = await indexedDB.databases();\r\n        const dbNames = databases.map(db => db.name);\r\n        if (!dbNames.includes(OLD_DB_NAME)) {\r\n            // old DB didn't exist, no need to open.\r\n            return null;\r\n        }\r\n    }\r\n    let tokenDetails = null;\r\n    const db = await openDB(OLD_DB_NAME, OLD_DB_VERSION, {\r\n        upgrade: async (db, oldVersion, newVersion, upgradeTransaction) => {\r\n            var _a;\r\n            if (oldVersion < 2) {\r\n                // Database too old, skip migration.\r\n                return;\r\n            }\r\n            if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\r\n                // Database did not exist. Nothing to do.\r\n                return;\r\n            }\r\n            const objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\r\n            const value = await objectStore.index('fcmSenderId').get(senderId);\r\n            await objectStore.clear();\r\n            if (!value) {\r\n                // No entry in the database, nothing to migrate.\r\n                return;\r\n            }\r\n            if (oldVersion === 2) {\r\n                const oldDetails = value;\r\n                if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\r\n                    return;\r\n                }\r\n                tokenDetails = {\r\n                    token: oldDetails.fcmToken,\r\n                    createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\r\n                    subscriptionOptions: {\r\n                        auth: oldDetails.auth,\r\n                        p256dh: oldDetails.p256dh,\r\n                        endpoint: oldDetails.endpoint,\r\n                        swScope: oldDetails.swScope,\r\n                        vapidKey: typeof oldDetails.vapidKey === 'string'\r\n                            ? oldDetails.vapidKey\r\n                            : arrayToBase64(oldDetails.vapidKey)\r\n                    }\r\n                };\r\n            }\r\n            else if (oldVersion === 3) {\r\n                const oldDetails = value;\r\n                tokenDetails = {\r\n                    token: oldDetails.fcmToken,\r\n                    createTime: oldDetails.createTime,\r\n                    subscriptionOptions: {\r\n                        auth: arrayToBase64(oldDetails.auth),\r\n                        p256dh: arrayToBase64(oldDetails.p256dh),\r\n                        endpoint: oldDetails.endpoint,\r\n                        swScope: oldDetails.swScope,\r\n                        vapidKey: arrayToBase64(oldDetails.vapidKey)\r\n                    }\r\n                };\r\n            }\r\n            else if (oldVersion === 4) {\r\n                const oldDetails = value;\r\n                tokenDetails = {\r\n                    token: oldDetails.fcmToken,\r\n                    createTime: oldDetails.createTime,\r\n                    subscriptionOptions: {\r\n                        auth: arrayToBase64(oldDetails.auth),\r\n                        p256dh: arrayToBase64(oldDetails.p256dh),\r\n                        endpoint: oldDetails.endpoint,\r\n                        swScope: oldDetails.swScope,\r\n                        vapidKey: arrayToBase64(oldDetails.vapidKey)\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    });\r\n    db.close();\r\n    // Delete all old databases.\r\n    await deleteDB(OLD_DB_NAME);\r\n    await deleteDB('fcm_vapid_details_db');\r\n    await deleteDB('undefined');\r\n    return checkTokenDetails(tokenDetails) ? tokenDetails : null;\r\n}\r\nfunction checkTokenDetails(tokenDetails) {\r\n    if (!tokenDetails || !tokenDetails.subscriptionOptions) {\r\n        return false;\r\n    }\r\n    const { subscriptionOptions } = tokenDetails;\r\n    return (typeof tokenDetails.createTime === 'number' &&\r\n        tokenDetails.createTime > 0 &&\r\n        typeof tokenDetails.token === 'string' &&\r\n        tokenDetails.token.length > 0 &&\r\n        typeof subscriptionOptions.auth === 'string' &&\r\n        subscriptionOptions.auth.length > 0 &&\r\n        typeof subscriptionOptions.p256dh === 'string' &&\r\n        subscriptionOptions.p256dh.length > 0 &&\r\n        typeof subscriptionOptions.endpoint === 'string' &&\r\n        subscriptionOptions.endpoint.length > 0 &&\r\n        typeof subscriptionOptions.swScope === 'string' &&\r\n        subscriptionOptions.swScope.length > 0 &&\r\n        typeof subscriptionOptions.vapidKey === 'string' &&\r\n        subscriptionOptions.vapidKey.length > 0);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Exported for tests.\r\nconst DATABASE_NAME = 'firebase-messaging-database';\r\nconst DATABASE_VERSION = 1;\r\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n            upgrade: (upgradeDb, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\r\n                // because if there are multiple versions between the old version and the current version, we\r\n                // want ALL the migrations that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        upgradeDb.createObjectStore(OBJECT_STORE_NAME);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Gets record(s) from the objectStore that match the given key. */\r\nasync function dbGet(firebaseDependencies) {\r\n    const key = getKey(firebaseDependencies);\r\n    const db = await getDbPromise();\r\n    const tokenDetails = (await db\r\n        .transaction(OBJECT_STORE_NAME)\r\n        .objectStore(OBJECT_STORE_NAME)\r\n        .get(key));\r\n    if (tokenDetails) {\r\n        return tokenDetails;\r\n    }\r\n    else {\r\n        // Check if there is a tokenDetails object in the old DB.\r\n        const oldTokenDetails = await migrateOldDatabase(firebaseDependencies.appConfig.senderId);\r\n        if (oldTokenDetails) {\r\n            await dbSet(firebaseDependencies, oldTokenDetails);\r\n            return oldTokenDetails;\r\n        }\r\n    }\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nasync function dbSet(firebaseDependencies, tokenDetails) {\r\n    const key = getKey(firebaseDependencies);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\r\n    await tx.done;\r\n    return tokenDetails;\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nasync function dbRemove(firebaseDependencies) {\r\n    const key = getKey(firebaseDependencies);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    await tx.objectStore(OBJECT_STORE_NAME).delete(key);\r\n    await tx.done;\r\n}\r\nfunction getKey({ appConfig }) {\r\n    return appConfig.appId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERROR_MAP = {\r\n    [\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\r\n    [\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */]: 'This method is available in a Window context.',\r\n    [\"only-available-in-sw\" /* AVAILABLE_IN_SW */]: 'This method is available in a service worker context.',\r\n    [\"permission-default\" /* PERMISSION_DEFAULT */]: 'The notification permission was not granted and dismissed instead.',\r\n    [\"permission-blocked\" /* PERMISSION_BLOCKED */]: 'The notification permission was not granted and blocked instead.',\r\n    [\"unsupported-browser\" /* UNSUPPORTED_BROWSER */]: \"This browser doesn't support the API's required to use the Firebase SDK.\",\r\n    [\"indexed-db-unsupported\" /* INDEXED_DB_UNSUPPORTED */]: \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\r\n    [\"failed-service-worker-registration\" /* FAILED_DEFAULT_REGISTRATION */]: 'We are unable to register the default service worker. {$browserErrorMessage}',\r\n    [\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */]: 'A problem occurred while subscribing the user to FCM: {$errorInfo}',\r\n    [\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */]: 'FCM returned no token when subscribing the user to push.',\r\n    [\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */]: 'A problem occurred while unsubscribing the ' +\r\n        'user from FCM: {$errorInfo}',\r\n    [\"token-update-failed\" /* TOKEN_UPDATE_FAILED */]: 'A problem occurred while updating the user from FCM: {$errorInfo}',\r\n    [\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */]: 'FCM returned no token when updating the user to push.',\r\n    [\"use-sw-after-get-token\" /* USE_SW_AFTER_GET_TOKEN */]: 'The useServiceWorker() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your service worker is used.',\r\n    [\"invalid-sw-registration\" /* INVALID_SW_REGISTRATION */]: 'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\r\n    [\"invalid-bg-handler\" /* INVALID_BG_HANDLER */]: 'The input to setBackgroundMessageHandler() must be a function.',\r\n    [\"invalid-vapid-key\" /* INVALID_VAPID_KEY */]: 'The public VAPID key must be a string.',\r\n    [\"use-vapid-key-after-get-token\" /* USE_VAPID_KEY_AFTER_GET_TOKEN */]: 'The usePublicVapidKey() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your VAPID key is used.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function requestGetToken(firebaseDependencies, subscriptionOptions) {\r\n    var _a;\r\n    const headers = await getHeaders(firebaseDependencies);\r\n    const body = getBody(subscriptionOptions);\r\n    const subscribeOptions = {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    let responseData;\r\n    try {\r\n        const response = await fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions);\r\n        responseData = await response.json();\r\n    }\r\n    catch (err) {\r\n        throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n            errorInfo: (_a = err) === null || _a === void 0 ? void 0 : _a.toString()\r\n        });\r\n    }\r\n    if (responseData.error) {\r\n        const message = responseData.error.message;\r\n        throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n            errorInfo: message\r\n        });\r\n    }\r\n    if (!responseData.token) {\r\n        throw ERROR_FACTORY.create(\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */);\r\n    }\r\n    return responseData.token;\r\n}\r\nasync function requestUpdateToken(firebaseDependencies, tokenDetails) {\r\n    var _a;\r\n    const headers = await getHeaders(firebaseDependencies);\r\n    const body = getBody(tokenDetails.subscriptionOptions);\r\n    const updateOptions = {\r\n        method: 'PATCH',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    let responseData;\r\n    try {\r\n        const response = await fetch(`${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`, updateOptions);\r\n        responseData = await response.json();\r\n    }\r\n    catch (err) {\r\n        throw ERROR_FACTORY.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n            errorInfo: (_a = err) === null || _a === void 0 ? void 0 : _a.toString()\r\n        });\r\n    }\r\n    if (responseData.error) {\r\n        const message = responseData.error.message;\r\n        throw ERROR_FACTORY.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n            errorInfo: message\r\n        });\r\n    }\r\n    if (!responseData.token) {\r\n        throw ERROR_FACTORY.create(\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */);\r\n    }\r\n    return responseData.token;\r\n}\r\nasync function requestDeleteToken(firebaseDependencies, token) {\r\n    var _a;\r\n    const headers = await getHeaders(firebaseDependencies);\r\n    const unsubscribeOptions = {\r\n        method: 'DELETE',\r\n        headers\r\n    };\r\n    try {\r\n        const response = await fetch(`${getEndpoint(firebaseDependencies.appConfig)}/${token}`, unsubscribeOptions);\r\n        const responseData = await response.json();\r\n        if (responseData.error) {\r\n            const message = responseData.error.message;\r\n            throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                errorInfo: message\r\n            });\r\n        }\r\n    }\r\n    catch (err) {\r\n        throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n            errorInfo: (_a = err) === null || _a === void 0 ? void 0 : _a.toString()\r\n        });\r\n    }\r\n}\r\nfunction getEndpoint({ projectId }) {\r\n    return `${ENDPOINT}/projects/${projectId}/registrations`;\r\n}\r\nasync function getHeaders({ appConfig, installations }) {\r\n    const authToken = await installations.getToken();\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': appConfig.apiKey,\r\n        'x-goog-firebase-installations-auth': `FIS ${authToken}`\r\n    });\r\n}\r\nfunction getBody({ p256dh, auth, endpoint, vapidKey }) {\r\n    const body = {\r\n        web: {\r\n            endpoint,\r\n            auth,\r\n            p256dh\r\n        }\r\n    };\r\n    if (vapidKey !== DEFAULT_VAPID_KEY) {\r\n        body.web.applicationPubKey = vapidKey;\r\n    }\r\n    return body;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// UpdateRegistration will be called once every week.\r\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\r\nasync function getTokenInternal(messaging) {\r\n    const pushSubscription = await getPushSubscription(messaging.swRegistration, messaging.vapidKey);\r\n    const subscriptionOptions = {\r\n        vapidKey: messaging.vapidKey,\r\n        swScope: messaging.swRegistration.scope,\r\n        endpoint: pushSubscription.endpoint,\r\n        auth: arrayToBase64(pushSubscription.getKey('auth')),\r\n        p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\r\n    };\r\n    const tokenDetails = await dbGet(messaging.firebaseDependencies);\r\n    if (!tokenDetails) {\r\n        // No token, get a new one.\r\n        return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\r\n    }\r\n    else if (!isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions)) {\r\n        // Invalid token, get a new one.\r\n        try {\r\n            await requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\r\n        }\r\n        catch (e) {\r\n            // Suppress errors because of #2364\r\n            console.warn(e);\r\n        }\r\n        return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\r\n    }\r\n    else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\r\n        // Weekly token refresh\r\n        return updateToken(messaging, {\r\n            token: tokenDetails.token,\r\n            createTime: Date.now(),\r\n            subscriptionOptions\r\n        });\r\n    }\r\n    else {\r\n        // Valid token, nothing to do.\r\n        return tokenDetails.token;\r\n    }\r\n}\r\n/**\r\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\r\n * the push subscription if it exists.\r\n */\r\nasync function deleteTokenInternal(messaging) {\r\n    const tokenDetails = await dbGet(messaging.firebaseDependencies);\r\n    if (tokenDetails) {\r\n        await requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\r\n        await dbRemove(messaging.firebaseDependencies);\r\n    }\r\n    // Unsubscribe from the push subscription.\r\n    const pushSubscription = await messaging.swRegistration.pushManager.getSubscription();\r\n    if (pushSubscription) {\r\n        return pushSubscription.unsubscribe();\r\n    }\r\n    // If there's no SW, consider it a success.\r\n    return true;\r\n}\r\nasync function updateToken(messaging, tokenDetails) {\r\n    try {\r\n        const updatedToken = await requestUpdateToken(messaging.firebaseDependencies, tokenDetails);\r\n        const updatedTokenDetails = Object.assign(Object.assign({}, tokenDetails), { token: updatedToken, createTime: Date.now() });\r\n        await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\r\n        return updatedToken;\r\n    }\r\n    catch (e) {\r\n        await deleteTokenInternal(messaging);\r\n        throw e;\r\n    }\r\n}\r\nasync function getNewToken(firebaseDependencies, subscriptionOptions) {\r\n    const token = await requestGetToken(firebaseDependencies, subscriptionOptions);\r\n    const tokenDetails = {\r\n        token,\r\n        createTime: Date.now(),\r\n        subscriptionOptions\r\n    };\r\n    await dbSet(firebaseDependencies, tokenDetails);\r\n    return tokenDetails.token;\r\n}\r\n/**\r\n * Gets a PushSubscription for the current user.\r\n */\r\nasync function getPushSubscription(swRegistration, vapidKey) {\r\n    const subscription = await swRegistration.pushManager.getSubscription();\r\n    if (subscription) {\r\n        return subscription;\r\n    }\r\n    return swRegistration.pushManager.subscribe({\r\n        userVisibleOnly: true,\r\n        // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\r\n        // submitted to pushManager#subscribe must be of type Uint8Array.\r\n        applicationServerKey: base64ToArray(vapidKey)\r\n    });\r\n}\r\n/**\r\n * Checks if the saved tokenDetails object matches the configuration provided.\r\n */\r\nfunction isTokenValid(dbOptions, currentOptions) {\r\n    const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\r\n    const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\r\n    const isAuthEqual = currentOptions.auth === dbOptions.auth;\r\n    const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\r\n    return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction externalizePayload(internalPayload) {\r\n    const payload = {\r\n        from: internalPayload.from,\r\n        // eslint-disable-next-line camelcase\r\n        collapseKey: internalPayload.collapse_key,\r\n        // eslint-disable-next-line camelcase\r\n        messageId: internalPayload.fcmMessageId\r\n    };\r\n    propagateNotificationPayload(payload, internalPayload);\r\n    propagateDataPayload(payload, internalPayload);\r\n    propagateFcmOptions(payload, internalPayload);\r\n    return payload;\r\n}\r\nfunction propagateNotificationPayload(payload, messagePayloadInternal) {\r\n    if (!messagePayloadInternal.notification) {\r\n        return;\r\n    }\r\n    payload.notification = {};\r\n    const title = messagePayloadInternal.notification.title;\r\n    if (!!title) {\r\n        payload.notification.title = title;\r\n    }\r\n    const body = messagePayloadInternal.notification.body;\r\n    if (!!body) {\r\n        payload.notification.body = body;\r\n    }\r\n    const image = messagePayloadInternal.notification.image;\r\n    if (!!image) {\r\n        payload.notification.image = image;\r\n    }\r\n    const icon = messagePayloadInternal.notification.icon;\r\n    if (!!icon) {\r\n        payload.notification.icon = icon;\r\n    }\r\n}\r\nfunction propagateDataPayload(payload, messagePayloadInternal) {\r\n    if (!messagePayloadInternal.data) {\r\n        return;\r\n    }\r\n    payload.data = messagePayloadInternal.data;\r\n}\r\nfunction propagateFcmOptions(payload, messagePayloadInternal) {\r\n    var _a, _b, _c, _d, _e;\r\n    // fcmOptions.link value is written into notification.click_action. see more in b/232072111\r\n    if (!messagePayloadInternal.fcmOptions &&\r\n        !((_a = messagePayloadInternal.notification) === null || _a === void 0 ? void 0 : _a.click_action)) {\r\n        return;\r\n    }\r\n    payload.fcmOptions = {};\r\n    const link = (_c = (_b = messagePayloadInternal.fcmOptions) === null || _b === void 0 ? void 0 : _b.link) !== null && _c !== void 0 ? _c : (_d = messagePayloadInternal.notification) === null || _d === void 0 ? void 0 : _d.click_action;\r\n    if (!!link) {\r\n        payload.fcmOptions.link = link;\r\n    }\r\n    // eslint-disable-next-line camelcase\r\n    const analyticsLabel = (_e = messagePayloadInternal.fcmOptions) === null || _e === void 0 ? void 0 : _e.analytics_label;\r\n    if (!!analyticsLabel) {\r\n        payload.fcmOptions.analyticsLabel = analyticsLabel;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isConsoleMessage(data) {\r\n    // This message has a campaign ID, meaning it was sent using the Firebase Console.\r\n    return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n_mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\r\n_mergeStrings('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');\r\nasync function stageLog(messaging, internalPayload) {\r\n    const fcmEvent = createFcmEvent(internalPayload, await messaging.firebaseDependencies.installations.getId());\r\n    createAndEnqueueLogEvent(messaging, fcmEvent);\r\n}\r\nfunction createFcmEvent(internalPayload, fid) {\r\n    var _a, _b;\r\n    const fcmEvent = {};\r\n    /* eslint-disable camelcase */\r\n    // some fields should always be non-null. Still check to ensure.\r\n    if (!!internalPayload.from) {\r\n        fcmEvent.project_number = internalPayload.from;\r\n    }\r\n    if (!!internalPayload.fcmMessageId) {\r\n        fcmEvent.message_id = internalPayload.fcmMessageId;\r\n    }\r\n    fcmEvent.instance_id = fid;\r\n    if (!!internalPayload.notification) {\r\n        fcmEvent.message_type = MessageType$1.DISPLAY_NOTIFICATION.toString();\r\n    }\r\n    else {\r\n        fcmEvent.message_type = MessageType$1.DATA_MESSAGE.toString();\r\n    }\r\n    fcmEvent.sdk_platform = SDK_PLATFORM_WEB.toString();\r\n    fcmEvent.package_name = self.origin.replace(/(^\\w+:|^)\\/\\//, '');\r\n    if (!!internalPayload.collapse_key) {\r\n        fcmEvent.collapse_key = internalPayload.collapse_key;\r\n    }\r\n    fcmEvent.event = EVENT_MESSAGE_DELIVERED.toString();\r\n    if (!!((_a = internalPayload.fcmOptions) === null || _a === void 0 ? void 0 : _a.analytics_label)) {\r\n        fcmEvent.analytics_label = (_b = internalPayload.fcmOptions) === null || _b === void 0 ? void 0 : _b.analytics_label;\r\n    }\r\n    /* eslint-enable camelcase */\r\n    return fcmEvent;\r\n}\r\nfunction createAndEnqueueLogEvent(messaging, fcmEvent) {\r\n    const logEvent = {};\r\n    /* eslint-disable camelcase */\r\n    logEvent.event_time_ms = Math.floor(Date.now()).toString();\r\n    logEvent.source_extension_json_proto3 = JSON.stringify(fcmEvent);\r\n    // eslint-disable-next-line camelcase\r\n    messaging.logEvents.push(logEvent);\r\n}\r\nfunction _mergeStrings(s1, s2) {\r\n    const resultArray = [];\r\n    for (let i = 0; i < s1.length; i++) {\r\n        resultArray.push(s1.charAt(i));\r\n        if (i < s2.length) {\r\n            resultArray.push(s2.charAt(i));\r\n        }\r\n    }\r\n    return resultArray.join('');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function onSubChange(event, messaging) {\r\n    var _a, _b;\r\n    const { newSubscription } = event;\r\n    if (!newSubscription) {\r\n        // Subscription revoked, delete token\r\n        await deleteTokenInternal(messaging);\r\n        return;\r\n    }\r\n    const tokenDetails = await dbGet(messaging.firebaseDependencies);\r\n    await deleteTokenInternal(messaging);\r\n    messaging.vapidKey =\r\n        (_b = (_a = tokenDetails === null || tokenDetails === void 0 ? void 0 : tokenDetails.subscriptionOptions) === null || _a === void 0 ? void 0 : _a.vapidKey) !== null && _b !== void 0 ? _b : DEFAULT_VAPID_KEY;\r\n    await getTokenInternal(messaging);\r\n}\r\nasync function onPush(event, messaging) {\r\n    const internalPayload = getMessagePayloadInternal(event);\r\n    if (!internalPayload) {\r\n        // Failed to get parsed MessagePayload from the PushEvent. Skip handling the push.\r\n        return;\r\n    }\r\n    // log to Firelog with user consent\r\n    if (messaging.deliveryMetricsExportedToBigQueryEnabled) {\r\n        await stageLog(messaging, internalPayload);\r\n    }\r\n    // foreground handling: eventually passed to onMessage hook\r\n    const clientList = await getClientList();\r\n    if (hasVisibleClients(clientList)) {\r\n        return sendMessagePayloadInternalToWindows(clientList, internalPayload);\r\n    }\r\n    // background handling: display if possible and pass to onBackgroundMessage hook\r\n    if (!!internalPayload.notification) {\r\n        await showNotification(wrapInternalPayload(internalPayload));\r\n    }\r\n    if (!messaging) {\r\n        return;\r\n    }\r\n    if (!!messaging.onBackgroundMessageHandler) {\r\n        const payload = externalizePayload(internalPayload);\r\n        if (typeof messaging.onBackgroundMessageHandler === 'function') {\r\n            await messaging.onBackgroundMessageHandler(payload);\r\n        }\r\n        else {\r\n            messaging.onBackgroundMessageHandler.next(payload);\r\n        }\r\n    }\r\n}\r\nasync function onNotificationClick(event) {\r\n    var _a, _b;\r\n    const internalPayload = (_b = (_a = event.notification) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[FCM_MSG];\r\n    if (!internalPayload) {\r\n        return;\r\n    }\r\n    else if (event.action) {\r\n        // User clicked on an action button. This will allow developers to act on action button clicks\r\n        // by using a custom onNotificationClick listener that they define.\r\n        return;\r\n    }\r\n    // Prevent other listeners from receiving the event\r\n    event.stopImmediatePropagation();\r\n    event.notification.close();\r\n    // Note clicking on a notification with no link set will focus the Chrome's current tab.\r\n    const link = getLink(internalPayload);\r\n    if (!link) {\r\n        return;\r\n    }\r\n    // FM should only open/focus links from app's origin.\r\n    const url = new URL(link, self.location.href);\r\n    const originUrl = new URL(self.location.origin);\r\n    if (url.host !== originUrl.host) {\r\n        return;\r\n    }\r\n    let client = await getWindowClient(url);\r\n    if (!client) {\r\n        client = await self.clients.openWindow(link);\r\n        // Wait three seconds for the client to initialize and set up the message handler so that it\r\n        // can receive the message.\r\n        await sleep(3000);\r\n    }\r\n    else {\r\n        client = await client.focus();\r\n    }\r\n    if (!client) {\r\n        // Window Client will not be returned if it's for a third party origin.\r\n        return;\r\n    }\r\n    internalPayload.messageType = MessageType.NOTIFICATION_CLICKED;\r\n    internalPayload.isFirebaseMessaging = true;\r\n    return client.postMessage(internalPayload);\r\n}\r\nfunction wrapInternalPayload(internalPayload) {\r\n    const wrappedInternalPayload = Object.assign({}, internalPayload.notification);\r\n    // Put the message payload under FCM_MSG name so we can identify the notification as being an FCM\r\n    // notification vs a notification from somewhere else (i.e. normal web push or developer generated\r\n    // notification).\r\n    wrappedInternalPayload.data = {\r\n        [FCM_MSG]: internalPayload\r\n    };\r\n    return wrappedInternalPayload;\r\n}\r\nfunction getMessagePayloadInternal({ data }) {\r\n    if (!data) {\r\n        return null;\r\n    }\r\n    try {\r\n        return data.json();\r\n    }\r\n    catch (err) {\r\n        // Not JSON so not an FCM message.\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * @param url The URL to look for when focusing a client.\r\n * @return Returns an existing window client or a newly opened WindowClient.\r\n */\r\nasync function getWindowClient(url) {\r\n    const clientList = await getClientList();\r\n    for (const client of clientList) {\r\n        const clientUrl = new URL(client.url, self.location.href);\r\n        if (url.host === clientUrl.host) {\r\n            return client;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @returns If there is currently a visible WindowClient, this method will resolve to true,\r\n * otherwise false.\r\n */\r\nfunction hasVisibleClients(clientList) {\r\n    return clientList.some(client => client.visibilityState === 'visible' &&\r\n        // Ignore chrome-extension clients as that matches the background pages of extensions, which\r\n        // are always considered visible for some reason.\r\n        !client.url.startsWith('chrome-extension://'));\r\n}\r\nfunction sendMessagePayloadInternalToWindows(clientList, internalPayload) {\r\n    internalPayload.isFirebaseMessaging = true;\r\n    internalPayload.messageType = MessageType.PUSH_RECEIVED;\r\n    for (const client of clientList) {\r\n        client.postMessage(internalPayload);\r\n    }\r\n}\r\nfunction getClientList() {\r\n    return self.clients.matchAll({\r\n        type: 'window',\r\n        includeUncontrolled: true\r\n        // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\r\n    });\r\n}\r\nfunction showNotification(notificationPayloadInternal) {\r\n    var _a;\r\n    // Note: Firefox does not support the maxActions property.\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\r\n    const { actions } = notificationPayloadInternal;\r\n    const { maxActions } = Notification;\r\n    if (actions && maxActions && actions.length > maxActions) {\r\n        console.warn(`This browser only supports ${maxActions} actions. The remaining actions will not be displayed.`);\r\n    }\r\n    return self.registration.showNotification(\r\n    /* title= */ (_a = notificationPayloadInternal.title) !== null && _a !== void 0 ? _a : '', notificationPayloadInternal);\r\n}\r\nfunction getLink(payload) {\r\n    var _a, _b, _c;\r\n    // eslint-disable-next-line camelcase\r\n    const link = (_b = (_a = payload.fcmOptions) === null || _a === void 0 ? void 0 : _a.link) !== null && _b !== void 0 ? _b : (_c = payload.notification) === null || _c === void 0 ? void 0 : _c.click_action;\r\n    if (link) {\r\n        return link;\r\n    }\r\n    if (isConsoleMessage(payload.data)) {\r\n        // Notification created in the Firebase Console. Redirect to origin.\r\n        return self.location.origin;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration Object');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    const configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId',\r\n        'messagingSenderId'\r\n    ];\r\n    const { options } = app;\r\n    for (const keyName of configKeys) {\r\n        if (!options[keyName]) {\r\n            throw getMissingValueError(keyName);\r\n        }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: options.projectId,\r\n        apiKey: options.apiKey,\r\n        appId: options.appId,\r\n        senderId: options.messagingSenderId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\r\n        valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass MessagingService {\r\n    constructor(app, installations, analyticsProvider) {\r\n        // logging is only done with end user consent. Default to false.\r\n        this.deliveryMetricsExportedToBigQueryEnabled = false;\r\n        this.onBackgroundMessageHandler = null;\r\n        this.onMessageHandler = null;\r\n        this.logEvents = [];\r\n        this.isLogServiceStarted = false;\r\n        const appConfig = extractAppConfig(app);\r\n        this.firebaseDependencies = {\r\n            app,\r\n            appConfig,\r\n            installations,\r\n            analyticsProvider\r\n        };\r\n    }\r\n    _delete() {\r\n        return Promise.resolve();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SwMessagingFactory = (container) => {\r\n    const messaging = new MessagingService(container.getProvider('app').getImmediate(), container.getProvider('installations-internal').getImmediate(), container.getProvider('analytics-internal'));\r\n    self.addEventListener('push', e => {\r\n        e.waitUntil(onPush(e, messaging));\r\n    });\r\n    self.addEventListener('pushsubscriptionchange', e => {\r\n        e.waitUntil(onSubChange(e, messaging));\r\n    });\r\n    self.addEventListener('notificationclick', e => {\r\n        e.waitUntil(onNotificationClick(e));\r\n    });\r\n    return messaging;\r\n};\r\n/**\r\n * The messaging instance registered in sw is named differently than that of in client. This is\r\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\r\n * `messaging-compat` and component with the same name can only be registered once.\r\n */\r\nfunction registerMessagingInSw() {\r\n    _registerComponent(new Component('messaging-sw', SwMessagingFactory, \"PUBLIC\" /* PUBLIC */));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Checks whether all required APIs exist within SW Context\r\n * @returns a Promise that resolves to a boolean.\r\n *\r\n * @public\r\n */\r\nasync function isSwSupported() {\r\n    // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\r\n    // might be prohibited to run. In these contexts, an error would be thrown during the messaging\r\n    // instantiating phase, informing the developers to import/call isSupported for special handling.\r\n    return (isIndexedDBAvailable() &&\r\n        (await validateIndexedDBOpenable()) &&\r\n        'PushManager' in self &&\r\n        'Notification' in self &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction onBackgroundMessage$1(messaging, nextOrObserver) {\r\n    if (self.document !== undefined) {\r\n        throw ERROR_FACTORY.create(\"only-available-in-sw\" /* AVAILABLE_IN_SW */);\r\n    }\r\n    messaging.onBackgroundMessageHandler = nextOrObserver;\r\n    return () => {\r\n        messaging.onBackgroundMessageHandler = null;\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable) {\r\n    messaging.deliveryMetricsExportedToBigQueryEnabled =\r\n        enable;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Retrieves a Firebase Cloud Messaging instance.\r\n *\r\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\r\n *\r\n * @public\r\n */\r\nfunction getMessagingInSw(app = getApp()) {\r\n    // Conscious decision to make this async check non-blocking during the messaging instance\r\n    // initialization phase for performance consideration. An error would be thrown latter for\r\n    // developer's information. Developers can then choose to import and call `isSupported` for\r\n    // special handling.\r\n    isSwSupported().then(isSupported => {\r\n        // If `isSwSupported()` resolved, but returned false.\r\n        if (!isSupported) {\r\n            throw ERROR_FACTORY.create(\"unsupported-browser\" /* UNSUPPORTED_BROWSER */);\r\n        }\r\n    }, _ => {\r\n        // If `isSwSupported()` rejected.\r\n        throw ERROR_FACTORY.create(\"indexed-db-unsupported\" /* INDEXED_DB_UNSUPPORTED */);\r\n    });\r\n    return _getProvider(getModularInstance(app), 'messaging-sw').getImmediate();\r\n}\r\n/**\r\n * Called when a message is received while the app is in the background. An app is considered to be\r\n * in the background if no active window is displayed.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\r\n * message is received and the app is currently in the background.\r\n *\r\n * @returns To stop listening for messages execute this returned function\r\n *\r\n * @public\r\n */\r\nfunction onBackgroundMessage(messaging, nextOrObserver) {\r\n    messaging = getModularInstance(messaging);\r\n    return onBackgroundMessage$1(messaging, nextOrObserver);\r\n}\r\n/**\r\n * Enables or disables Firebase Cloud Messaging message delivery metrics export to BigQuery. By\r\n * default, message delivery metrics are not exported to BigQuery. Use this method to enable or\r\n * disable the export at runtime.\r\n *\r\n * @param messaging - The `FirebaseMessaging` instance.\r\n * @param enable - Whether Firebase Cloud Messaging should export message delivery metrics to\r\n * BigQuery.\r\n *\r\n * @public\r\n */\r\nfunction experimentalSetDeliveryMetricsExportedToBigQueryEnabled(messaging, enable) {\r\n    messaging = getModularInstance(messaging);\r\n    return _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterMessagingInSw();\n\nexport { experimentalSetDeliveryMetricsExportedToBigQueryEnabled, getMessagingInSw as getMessaging, isSwSupported as isSupported, onBackgroundMessage };\n","import firebase from '@firebase/app-compat';\nimport { Component } from '@firebase/component';\nimport { getToken, deleteToken, onMessage } from '@firebase/messaging';\nimport { isIndexedDBAvailable, areCookiesEnabled } from '@firebase/util';\nimport { onBackgroundMessage } from '@firebase/messaging/sw';\n\nconst name = \"@firebase/messaging-compat\";\nconst version = \"0.1.21\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isSupported() {\r\n    if (self && 'ServiceWorkerGlobalScope' in self) {\r\n        // Running in ServiceWorker context\r\n        return isSwSupported();\r\n    }\r\n    else {\r\n        // Assume we are in the window context.\r\n        return isWindowSupported();\r\n    }\r\n}\r\n/**\r\n * Checks to see if the required APIs exist.\r\n * Unlike the modular version, it does not check if IndexedDB.open() is allowed\r\n * in order to keep isSupported() synchronous and maintain v8 compatibility.\r\n */\r\nfunction isWindowSupported() {\r\n    return (typeof window !== 'undefined' &&\r\n        isIndexedDBAvailable() &&\r\n        areCookiesEnabled() &&\r\n        'serviceWorker' in navigator &&\r\n        'PushManager' in window &&\r\n        'Notification' in window &&\r\n        'fetch' in window &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\r\n/**\r\n * Checks to see if the required APIs exist within SW Context.\r\n */\r\nfunction isSwSupported() {\r\n    return (isIndexedDBAvailable() &&\r\n        'PushManager' in self &&\r\n        'Notification' in self &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\r\nclass MessagingCompatImpl {\r\n    constructor(app, _delegate) {\r\n        this.app = app;\r\n        this._delegate = _delegate;\r\n        this.app = app;\r\n        this._delegate = _delegate;\r\n    }\r\n    async getToken(options) {\r\n        return getToken(this._delegate, options);\r\n    }\r\n    async deleteToken() {\r\n        return deleteToken(this._delegate);\r\n    }\r\n    onMessage(nextOrObserver) {\r\n        return onMessage(this._delegate, nextOrObserver);\r\n    }\r\n    onBackgroundMessage(nextOrObserver) {\r\n        return onBackgroundMessage(this._delegate, nextOrObserver);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst messagingCompatFactory = (container) => {\r\n    if (self && 'ServiceWorkerGlobalScope' in self) {\r\n        // in sw\r\n        return new MessagingCompatImpl(container.getProvider('app-compat').getImmediate(), container.getProvider('messaging-sw').getImmediate());\r\n    }\r\n    else {\r\n        // in window\r\n        return new MessagingCompatImpl(container.getProvider('app-compat').getImmediate(), container.getProvider('messaging').getImmediate());\r\n    }\r\n};\r\nconst NAMESPACE_EXPORTS = {\r\n    isSupported\r\n};\r\nfunction registerMessagingCompat() {\r\n    firebase.INTERNAL.registerComponent(new Component('messaging-compat', messagingCompatFactory, \"PUBLIC\" /* PUBLIC */).setServiceProps(NAMESPACE_EXPORTS));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterMessagingCompat();\r\nfirebase.registerVersion(name, version);\n"],"x_google_ignoreList":[0,1]}